{"version":3,"sources":["logo.svg","views/Home/Home.js","components/Navbar/NavbarButton.js","views/About/About.js","components/contactLeft/ContactLeft.js","views/Contacts/Contacts.js","components/repo/Repo.js","views/Portfolio/Portfolio.js","components/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","href","target","NavbarButton","props","style","onClick","showNavBar","About","ContactLeft","Contacts","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","components_contactLeft_ContactLeft","Component","Repo","html_url","name","description","Portfolio","_this","state","repos","_this2","fetch","then","res","json","data","setState","repo","map","e","components_repo_Repo","Navbar","width","color","NavLink","exact","to","Route","path","component","components_Navbar_NavbarButton","App","components_Navbar_Navbar","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.362f7b2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport './Home.css'\r\n\r\nconst Home = () => {\r\n  return(\r\n    <div className = \"Home\">\r\n        <div className = \"introduction\">\r\n          <table>\r\n            <tr>\r\n              <td>\r\n                <h1>Ha Tran</h1>\r\n                <h2>Engineer and Developer</h2>\r\n                <a href=\"https://www.linkedin.com/in/ha-tran-b91553106/\" className= \"contact-icon\" target = \"_blank\">\r\n                  <div className = \"fa fa-linkedin\"></div>\r\n                </a>\r\n                <a href =\"https://github.com/tranvietha2809\" className = \"contact-icon\" target =\"_blank\">\r\n                  <div className = \"fa fa-github\"></div>  \r\n                </a>    \r\n                <a href =\"https://stackoverflow.com/users/8052713/ha-tran\" className = \"contact-icon\" target =\"_blank\">\r\n                  <div className = \"fa fa-stack-overflow\"></div>  \r\n                </a>    \r\n              </td>\r\n              <td>          \r\n              </td>\r\n            </tr>\r\n          </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport './NavbarButton.css'\r\nconst NavbarButton = props => {\r\n  return (\r\n    <span className = \"NavbarButton\" style = {props.style} onClick = {props.showNavBar}>â˜°</span>\r\n  )\r\n}\r\n\r\nexport default NavbarButton;\r\n","import React from 'react';\r\nimport './About.css'\r\nconst About = () => {\r\n  return(\r\n    <div className = \"About\"> \r\n      What do I do?\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react';\r\nimport './ContactLeft.css'\r\n\r\nconst ContactLeft = () => {\r\n    return (\r\n        <div>\r\n            <h1>Have something interesting or a friendly message ? :) </h1>\r\n            <a href=\"mailto:tranvietha.2809@gmail.com\" className='mail-button'>Tell me</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactLeft;","import React, {Component} from 'react';\r\nimport ContactForm from '../../components/ContactForm/ContactForm.js';\r\nimport ContactLeft from '../../components/contactLeft/ContactLeft.js';\r\nclass Contacts extends Component {\r\n  constructor(){\r\n    super();\r\n  }\r\n  render(){\r\n    return (\r\n      <div className = \"Contacts\">\r\n        <ContactLeft/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contacts\r\n","import React, {Component} from 'react';\r\nimport './Repo.css'\r\nconst Repo = props =>{\r\n    return(\r\n        <li className = 'repo'>\r\n            <a className = \"repo-url\" href = {props.html_url}>{props.name}</a>\r\n            <hr/>\r\n            <h2 className = \"repo-desc\">{props.description}</h2>    \r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Repo;","import React, {Component} from 'react';\r\nimport Repo from '../../components/repo/Repo';\r\nimport \"./Portfolio.css\"\r\nclass  Portfolio extends Component {\r\n  constructor(){\r\n    super(); \r\n    this.state = {\r\n      repos : [],\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const api = \"https://api.github.com/users/tranvietha2809/repos\"\r\n    fetch(api)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({\r\n          repos: data\r\n        })\r\n      })\r\n  }\r\n  render(){\r\n    let repo = this.state.repos.map((e) => {\r\n      return (\r\n        <Repo name = {e.name} html_url= {e.html_url} description={e.description === null ? \"No description :(\": e.description}/>\r\n      )\r\n      \r\n    })\r\n    return(\r\n      <div className = \"portfolio\">\r\n        <h1>What I am up to?</h1>\r\n        <h3>When I'm not too busy, I like to turn coffee into code</h3>\r\n        <div className = \"portfolio-frame\">\r\n          <ul className = \"portfolio-list\">{repo}</ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Portfolio\r\n","import React, { Component } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom'\r\nimport NavbarButton from './NavbarButton.js'\r\nimport Home from '../../views/Home/Home.js'\r\nimport About from '../../views/About/About.js'\r\nimport Contacts from '../../views/Contacts/Contacts.js'\r\nimport Portfolio from '../../views/Portfolio/Portfolio.js'\r\nimport './Navbar.css'\r\nimport './Navbarbranding.css'\r\nclass Navbar extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      Navbar: {\r\n        width: '0%',\r\n      },\r\n      NavbarButton:{\r\n        color: 'white'\r\n      }\r\n    }\r\n  }\r\n\r\n  showNavBar = () => {\r\n    if (this.state.Navbar.width === '0%'){\r\n      this.setState({\r\n        Navbar: {\r\n          width: '50%',\r\n        },\r\n        NavbarButton : {\r\n          color: 'white'\r\n        }\r\n      })\r\n    } else{\r\n      this.setState({\r\n        Navbar: {\r\n          width: '0%',\r\n        },\r\n        NavbarButton: {\r\n          color: 'white'\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <div className=\"Navbarbranding\" style ={{width: this.state.Navbar.width}}>\r\n          <div className = \"portrait\"></div>\r\n        </div>\r\n        <div className =\"Navbar\" style ={{width : this.state.Navbar.width}}>\r\n          <NavLink exact to=\"/\" onClick = {this.showNavBar}>Home</NavLink>\r\n          <NavLink exact to=\"/about\" onClick = {this.showNavBar}>About</NavLink>\r\n          <NavLink exact to=\"/portfolio\" onClick = {this.showNavBar}>Portfolio</NavLink>\r\n          <NavLink exact to=\"/contacts\" onClick = {this.showNavBar}>Contacts</NavLink>\r\n        </div>\r\n          <div className=\"content\">\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/about\" component={About} />\r\n            <Route exact path=\"/portfolio\" component={Portfolio} />\r\n            <Route exact path=\"/contacts\" component={Contacts} />\r\n        \t</div>\r\n        <NavbarButton style = {{color: this.state.NavbarButton.color}} showNavBar={this.showNavBar}/>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom'\nimport Home from './views/Home/Home.js'\nimport Navbar from './components/Navbar/Navbar.js'\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          <header>\n          <Navbar/>\n          </header>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}